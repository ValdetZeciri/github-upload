branches: Branches ermöglichen es Ihnen, Funktionen zu entwickeln, Fehler zu beheben oder sicher mit neuen Ideen in einem geschlossenen Bereich Ihres Repositorys zu experimentieren.
über branch main erstellen.
pull-request: Zusammenarbeit mit Mitschüler
Befehle:
git init: Erstellt neue Repository
git clone: erstellt eine Kopie der Repository
git add: checkt in die Staging-Area ein
git commit: alles was in die Staging-Area eingecheckt wurde, wurde gespeichert
git status: gibt status der einzelnen Areas her
git branch: zeigt die Branches an, die bearbeitet werden
git merge: wird verwendet um Änderungen zu kombinieren, die an zwei unterschiedlichen Branches vorgenommen wurden.
git pull: wird verwendet um Änderung, die von einem anderen Kollegen vorgenommen wurden, herunterzuladen.
git push: aktualisiert das Remote-Repository mit allen Commits, die von mir erstellt wurden.
# download a repository on GitHub to our machine
# Replace `owner/repo` with the owner and name of the repository to clone
Datei in eine Repo hinzufügen
git clone https://github.com/owner/repo.git

# change into the `repo` directory
cd repo

# create a new branch to store any new changes
git branch my-branch

# switch to that branch (line of development)
git checkout my-branch

# make changes, for example, edit `file1.md` and `file2.md` using the text editor

# stage the changed files
git add file1.md file2.md

# take a snapshot of the staging area (anything that's been added)
git commit -m "my snapshot"

# push changes to github
git push --set-upstream origin my-branch

Neue Repo 
# create a new directory, and initialize it with git-specific functions
git init my-repo

# change into the `my-repo` directory
cd my-repo

# create the first file in the project
touch README.md

# git isn't aware of the file, stage it
git add README.md

# take a snapshot of the staging area
git commit -m "add README to initial commit"

# provide the path for the repository you created on github
git remote add origin https://github.com/YOUR-USERNAME/YOUR-REPOSITORY-NAME.git

# push changes to github
git push --set-upstream origin main

Branch Änderungen speivhern
# change into the `repo` directory
cd repo

# update all remote tracking branches, and the currently checked out branch
git pull

# change into the existing branch called `feature-a`
git checkout feature-a

# make changes, for example, edit `file1.md` using the text editor

# stage the changed file
git add file1.md

# take a snapshot of the staging area
git commit -m "edit file1"

# push changes to github
git push

Markdown:
# ist die Überschrift
Bild einfügen: ![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)